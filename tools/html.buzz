import "lib/std";

object Node {
    str tag,
    {str, str} attributes,
    [Node]? children = null,
    str? textContent = null,

    static fun init(str? tag, {str, str}? attributes, [Node]? children, str? textContent) > Node {
        return Node{
            tag = tag ?? "",
            attributes = attributes ?? <str, str>{},
            children = children,
            textContent = textContent
        };
    }

    fun gen() > str {
        | Empty tag is the text node
        if (this.tag == "") {
            return this.textContent ?? "";
        }

        str out = "<{this.tag}";

        foreach (str name, str value in this.attributes) {
            out = "{out} {name}=\"{value}\"";
        }

        if (this.children != null and this.children!.len() > 0) {
            out = "{out}>";

            foreach (num i, Node node in this.children ?? <Node>[]) {
                out = "{out}{node.gen()}";
            }

            return "{out}</{this.tag}>";
        }

        return "{out}/>";
    }
}

fun text(str content) > Node -> Node.init(tag: "", textContent: content);

export Node;
export text;

test "html" {
    assert(text("hello world").gen() == "hello world", message: "text node");

    assert(
        Node.init(
            "div",
            children: [
                Node.init(
                    "",
                    textContent: "hello world",
                ),
                Node.init("br"),
            ],
            attributes: {
                "data-id": "012bfef"
            },
        ).gen() == "<div \"data-id\"=\"012bfef\">hello world<br/></div>",
        message: "Could gen simple html"
    );
}