import "zig-out/lib/libstd.dylib";

test "if statement" {
    if (2 > 1) {
        assert(true, message: "if");
    } else {
        assert(false, message: "else");
    }

    if (2 < 1) {
        assert(false, message: "if");
    } else {
        assert(true, message: "else");
    }
}

test "if statement with placeholder" {
    if (ahead == "wat") {
        assert(true, message: "works with a placeholder");
    } else {
        assert(false, message: "if failed with placeholder");
    }

    if (objAhead.name == "joe") {
        assert(true, message: "works with a placeholder");
    } else {
        assert(false, message: "if failed with placeholder");
    }
}

test "while statement" {
    num i = 0;
    while (i < 10) {
        i = i + 1;
    }

    assert(i == 10, message: "while");
}

test "while statement with placeholder" {
    while (objAhead.age < 10) {
        objAhead.age = objAhead.age + 1;
    }

    assert(objAhead.age == 10, message: "while with placeholder");
}

test "do-until statement" {
    num i = 10;
    do {
        i = i - 1;
    } until (i == 0)

    assert(i == 0, message: "do until");
}

test "break statement" {
    num i = 0;
    while (i < 10) {
        i = i + 1;

        if (i == 3) {
            break;
        }
    }

    assert(i == 3, message: "break");
}

test "continue statement" {
    num i = 0;
    while (i < 10) {
        i = i + 1;

        if (i == 3) {
            continue;
        }

        i = i + 1;
    }

    assert(i == 11, message: "break");
}

str ahead = "wat";

object Ahead {
    str name = "joe",
    num age = 0
}

Ahead objAhead = Ahead{};