import "lib/std.buzz";

test "Optional force unwrapping with `!`" {
    str? hello = null;

    try {
        print(hello!);
        assert(false, message: "can't be here");
    } catch {
        assert(true, message: "can't force unwrap a null");
    }

    hello = "hello world";

    try {
        print(hello!);

        assert(true, message: "force unwrap of actual value is ok");
    } catch {
        assert(false, message: "should not fail");
    }
}

test "Optional graceful unwrapping with `?`" {
    [num]? optList = [1, 2, 3];

    assert(optList?.len() == 3, message: "could unwrap optList");
}

object Me {
    [num]? list = [1, 2, 3]
}

test "Optional chaining" {
    Me? me = Me{};

    assert(me?.list?.len() == 3, message: "chaining optionals work");
}

test "Null coalescing operator" {
    str? hello = null;

    assert(hello ?? "world" == "world", message: "null coalescing");
}