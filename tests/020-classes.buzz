import "zig-out/lib/libstd.dylib";

class Form {
    num x,
    num y,

    fun toString() > str {
        return "({this.x}, {this.y})";
    }
}

class Circle < Form {
    num radius,

    fun toString() > str {
        return "center: {super.toString()}, radius: {this.radius}";
    }
}

test "Inheritance & polymorphism" {
    Circle circle = Circle {
        x = 0,
        y = 0,
        radius = 10,
    };

    | assert(circle is Circle, message: "of course");
    | assert(circle is Form, message: "inheritance baby");
    print(circle.toString());
    assert(circle.toString() == "center: (0, 0), radius: 10", message: "polymorphism");
}

| test "Downcast" {
|     Circle circle = Circle {
|         x = 0,
|         y = 0,
|         radius = 10,
|     };

|     Form form = circle;

|     assert(form.toString() == "center: (0, 0), radius: 10", message: "polymorphism");
| }

