import "lib/std";

test "foreach on list" {
    [num] list = [1, 2, 3];

    num sum = 0;
    foreach (num index, num item in list) {
        print("{index} {item}");
        sum = sum + item;
    }

    print("{sum}");
    assert(sum == 6, message: "foreach on list");
}

test "list.next" {
    [num] list = [1, 2, 3];

    assert(list.next(null) == 0, message: "calling next native");
    assert(list.next(0) == 1, message: "calling next native");
}

test "foreach on map" {
    {str, num} map = {
        "one": 1,
        "two": 2,
        "three": 3
    };

    num sum = 0;
    foreach (str key, num value in map) {
        sum = sum + value;
    }

    assert(sum == 6, message: "foreach on map");
}

enum Hey {
    one,
    two,
    three,
}

test "foreach on enum" {
    num sum = 0;
    foreach (Hey case in Hey) {
        sum = sum + case.value;
    }

    assert(sum == 3, message: "foreach on enum");
}