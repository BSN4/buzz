import "zig-out/lib/libstd.dylib";

enum(str) StrEnum {
    one = "one",
    two = "two",
    three = "three",
}

enum(num) NumEnum {
    one = 1,
    two = 2,
    three = 3,
    | wat = "wat",
}

enum NaturalEnum {
    zero,
    one,
    two,
}

object My {
    num age = 10;

    fun init(num age) {
        this.age = age;
    }
}

enum(My) CustomEnum {
    zero = My(0),
    one = My(1),
    two = My(2),
}

test "Enums" {
    assert(StrEnum.one.value == "one", message: "str enum");

    assert(NumEnum.one.value == 1, message: "num enum");

    assert(NaturalEnum.zero.value == 0, message: "natural enum");

    NaturalEnum myCase = NaturalEnum.two;

    assert(myCase.value == 2, message: "enum instance");

    assert(CustomEnum.zero.value.age == 0, message: "enum of custom type");
}