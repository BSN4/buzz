import "lib/errors";

|| @return absolute value of n
extern fun abs(num n) > num;

|| @return acos of n
extern fun acos(num n) > num;

|| @return asin of n
extern fun asin(num n) > num;

|| @return atan of n
extern fun atan(num n) > num;

|| @return ceiled n
extern fun bzceil(num n) > num;

|| @return cos of n
extern fun bzcos(num n) > num;

|| Ï€ constant
const num pi = 3.1415926535898;

|| Convert radian to degree
fun deg(num n) > num {
    return n * 180 / pi;
}

|| @return exp of n
extern fun bzexp(num n) > num;

|| @returned floored n
extern fun bzfloor(num n) > num;

|| @return log(base) of n
extern fun bzlog(num base, num n) > num;

|| @return max of a and b
extern fun max(num a, num b) > num;

|| @return min of a and b
extern fun min(num a, num b) > num;

|| Convert degree to radian
fun rad(num n) > num {
    return n * pi / 180;
}

|| @return random number between 0 and 1
extern fun random() > num;

|| @return sin of n
extern fun bzsin(num n) > num;

|| @return square root of n
extern fun bzsqrt(num n) > num;

|| @return tan of n
extern fun bztan(num n) > num;

|| @return `x`^`y`
extern fun pow(num x, num y) > num !> OverflowError, UnderflowError;

export abs;
export acos;
export asin;
export atan;
export bzsqrt as sqrt;
export bzceil as ceil;
export bzcos as cos;
export deg;
export bzexp as exp;
export bzfloor as floor;
export bzlog as log;
export max;
export min;
export pi;
export rad;
export random;
export bzsin as sin;
export bztan as tan;
export pow;